name: Publish Package to NPM

on:
  release:
    types: ["published"]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Setup Yarn cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install

      - name: Clean
        run: yarn clean

      - name: Lint
        run: yarn lint:all

      - name: Get Latest Release Tag
        id: release_tag
        run: |
          RELEASE_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          VERSION=${RELEASE_TAG#v}
          echo "tag=$VERSION" >> $GITHUB_ENV

      - name: Update package.json files
        run: |
          # Update the version in the specified package.json files
          jq ".version = \"$tag\"" plugins/firefly/package.json > tmp.json && mv tmp.json plugins/firefly/package.json
          jq ".version = \"$tag\"" plugins/firefly-backend/package.json > tmp.json && mv tmp.json plugins/firefly-backend/package.json
        env:
          tag: ${{ env.tag }}

      - name: Compile TypeScript
        run: yarn tsc
      
      - name: Test
        run: yarn test:all
      
      - name: Build Packages
        run: yarn build:all

      - name: Publish Packages to NPM
        run: |
          echo "npmAuthToken: $NODE_AUTH_TOKEN" >> ../../.yarnrc.yml
          yarn workspaces foreach --all --parallel --no-private npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
